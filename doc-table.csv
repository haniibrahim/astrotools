FUNCTION NAME,DESCRIPTION,INPUT,OUTPUT,EXAMPLE,NOTES
AT_aperature,Needed aperatur to reach given angular resolution of an optic (telescope),res:  resolution in grad (°),"ap_r: aperature for red light (lamda=656nm) in m, 
ap_g: aperature for green light (lamda=555nm) in m, 
ap_b: aperature of blue light (lamda=400nm) in m","[red, green, blue] = AT_aperature(1/3600) // aperature for 1"" resolution","Calculates the needed aperatur of an telecope to reach a given resolution in grad (°) for three wave length (red=656nm, green=555nm, blue=400nm) in m. The results are valid for an perfect optic and sky. Getting a more realistic result by multiplicate the results with 1.22. "
AT_apparentSize,Calculates the visual angle (angle of sight) or apparent size of an observed object in the distance,"obj_size: Real size of the object in the distant in m, 
dist:     Distance from the observer to the object in m","pp_size: Apparent size, visual angle or parallax in °","AT_astroconst(); 
AppSize = AT_visualAngle(moon.r*2, moon.dist) // Apparent size of the moon","Calculates the visual angle (angle of sight) or apparent size of an observed object in the distance. 
The moon has a distance of 400,000km and a size of 3,500km. The apparent size is 0.5°."
AT_atmosphAdsorbCoeff,Atmosheric adsorption coefficient,"dist  : Visual distance in m
",sigma:  Atmosheric adsorption coefficient in m**(-1),AT_atmosphAdsorbCoeff(10.3),
AT_centrifugal,Centrifugal force from track or angular speed,"m: Mass of the object in kg, 
r: Radius in m, 
v: Track speed in m/s (as key=value), 
o: Angular speed in °/s (as key=value)
(just one of the latter)",F: Centrifugal force in N,"AT_astroconst(); 
F_cent = AT_centrifugal(80, earth.r, v=463) // Centrifugal force at earth's equator (track speed used); 
F_cent = AT_centrifugal(80, earth.r, o=0.00417) // Centrifugal force at earth's equator (angular speed used)",Calculates the centrifugal force for an given track OR angular speed. (Make use of key=value paramezer commitment)
AT_checkAstroconst,Checks if AT_astroconst() was executed to provide constants,none,Displays error message if function AT_astroconst() was not executed for poviding constants,AT_checkAstroconst(),
AT_checkCelestlab,Checks if Toolbox Celestlab is installed and loaded,none,Displays error message if tollbox Celeslab is not present,AT_checkCelestlab(),Check if Toolbox Celestlab was loaded. If not a error message is displayed and terminates the script or function.
AT_currentday2date,Convert current day of the year to month and day,"cday: current day of the year (1 .. 365 / 366 leap year), 
year: year as 4-digit number (e.g. 2016)","month: month as a number (1 .. 12), 
day  : day as a number (1 .. 31),
h: hour (0..23), 
m: minute (0..59), 
s: second (0..59)","AT_currentday2date(64, 2016)","The current day starts with 1  => Jan., 1st = 1; Dec., 31st = 365 (normal year), 366 (leap year)"
AT_date2currentday,Convert date to current day of the year,"year: year as 4-digit number (e.g. 2016), 
month: month as a number (1 .. 12), 
day : day as a number (1 .. 31), 
h: hour (0..23), 
m: minute (0..59), 
s: second (0..59)","cday: current day of the year (1 .. 365, 366 when leap year)","AT_date2currentday(2017, 3, 10)","The current day starts with 1 => Jan., 1st = 1; Dec., 31st = 365 (normal year), 366 (leap year)"
AT_earthCurveHeight,Calculates how much a distant object is obscured by the earth's curvature,"h1    : Eye height in m, 
dist  : target distance in m
refr:  terrestrial refraction (OPTIONAL), set to 1 (no refraction) if not committed, refr = 1.13 is common value.","h2: target hidden height in m
hrz: distance to the horizon in m","[hiddenHeight, distHorizon] = AT_earthCurveHeight(1.6, 50000, 1.13)",
AT_escSpeed,Escape speed from an non-rotating massive body at a certain height,"m:    Mass of the body in kg (e.g. planet), 
r:    Radius of the body in m (e.g. radius of a planet), 
h:    Heigth of the object above the body in m (e.g. height of an artificial satellite)",v:    Escape velocity in m/s,"AT_astroconst(); 
AT_escSpeed(earth.mass, earth.r, 0) // escape vel. from the earth @sea level",Calculates minimum speed needed for an object to escape from a massive body from a definite height. But rotating of the body is unconsidered.
AT_exitPupil,Exit pupil of an eye piece,"lens_dia    : lens diameter in m(mm), 
lens_foclen : lens focal length in m(mm)",exitPupil   = exit pupil of the eye piece in question m(mm),"AT_exitPupil(150, 1200, 25)",
AT_fallvelo,Fall velocity,"h : Height in m,
A : Acceleration in m/s² (optional), if not specified a : 9.80665",v: fall velocity in m/s,AT_fallvelo(40000),
AT_gravity,Gravity effected on an object above a massive body,"m : Mass of the body in kg, 
r : Radius of the body in m, 
h : Height above the body in m",,"AT_astroconst(); AT_gravity(earth.mass, earth.r, 400000) // Gravity @ISS",
AT_isCelestlab,Checks if CelestLab toolbox is installed and loaded,,,AT_isCelestlab(),
AT_isLeapYear,Calculates whether the committed year is a leap year or not.,year:    is the four-digit number of the year in question.,leapYear : is a boolean which is TRUE if “year” is a leap year and FALSE if not.,AT_isLeapYear(2016),
AT_orbitalspeed,Orbital speed of an object orbitting a body at a particular distance,"r : distance at which the speed is to be calculated in m, 
a : length of the semi-major axis of the elliptical orbit. For the Earth at perihelion in m (optional)
M : Mass of the heavier object in kg, 
m: Mass of the lighter object in kg (optional)",v: orbital speed in m/s,"AT_astroconst(); 
AT_orbitalspeed(earth.r + 4e5, earth.mass) // Orbital speed of ISS (circular orbit); 
AT_orbitalspeed(earth.per, earth.dist, sun.mass, earth.mass) // Orbital speed of the earth @perihelion (elliptical orbit)","Calculate the oribital speed of an object (e.g. satellite) orbitting a massive body (planet) at a particular height.
The mass (m) of the lighter object can be omitted if the differenz to the heavier one is huge.
On circular orbits a is equal to r."
AT_realSize,Calculates the real size of an object in the distance from the apparent size,"app_size: Apparent size of the object in the distant in °, 
dist:     Distance from the observer to the object in m",obj_size: Real size of the object in the distant in m,"obj_size = AT_realSize(0.19, 31e6) // Real size of galaxy M51",
AT_refraction_add,Atmospheric refraction of an apparent altitude,"h_s: apparent altitude of the astronomical body in °, 
t:   temperatur in K (OPTIONAL), if not specified t=283K, 
p:   pressure in hPa (OPTIONAL), if not specified p=1010hPa",R:   Atmospheric refraction correction in °,AT_refraction_add(25),You have to add the value to a calculated/real altitude to get the the observed altitude
AT_refraction_del,Atmospheric refraction elimination of an observed altitude,"h_o: observed altitude of the astronomical body in °, 
t:   temperatur in K (OPTIONAL), if not specified t=283K, 
p:   pressure in hPa (OPTIONAL), if not specified p=1010hPa",R_e: Atmospheric refraction in °,AT_refraction_del(25),"You have to substract the value to a observed altitude to get the
 real altitude w/o atmospheric influence."
AT_resolution,Angular resolution of an optic (telescope),ap: aperature in m,"res_r: resolution of red light (lamda=656nm) in grad(°), 
res_g: resolution of green light (lamda=555nm) in grad(°), 
res_b: resolution of blue light (lamda=400nm) in grad(°)","[red, green, blue] = AT_resolution(0.15) // 150mm aperature","Calculates the angular resolution of an optic (telescope) for three wave length of light (red=656nm, green=555nm, blue=400nm) in grad (°). The results are valid for an perfect optic and sky. Getting a more realistic result by multiplicate the results with 1.22."
AT_visualRange,Maximum visual range on a spherical body,"height1 : height of eye/instrument in m, 
height2 : height of distant object in m, 
r: Radius of spherical body in m, e.g. planet (OPTIONAL), set to the mean radius of earth if not committed
refr : terrestrial refraction (OPTIONAL), set to 1 (no refraction) if not committed, refr = 1.13 is common value.",range = maximium visual range of sight in m,"AT_astroconst(); 
range = AT_visualRange(1.5, 100, earth.r, 1.13) // The top of an object of 100m height can be observed by an observer with a eye level of 1.5m to a distance of approx. 45.3km when a terrestrial refraction of 13% is taken into account.",Calculates to which distance the top of an object of a specific height can be observed on a speherical body by an observer of an itself specific height.
